Create a full-featured, production-ready mobile application using **React Native with Expo** for the frontend and **Firebase** for the backend. The application is called **Shindeâ€™z Organics Application**, and its purpose is to empower Indian farmers by enabling them to **rent or sell agricultural equipment** on an hourly or daily basis.

The application must have two main panels:

---

ðŸ”¹ 1. Farmer Mobile Application (React Native with Expo)

âœ… **Core Features:**
- **User Registration & Login (Firebase Auth)**
  - Farmers can sign up using phone number or email.
  - Support Firebase OTP verification.
  - Firebase Authentication stores user sessions.
  - Auto-login for returning users.

- **Multilingual Support:**
  - Support all major Indian languages + English using `i18next`.
  - Language selection screen at first launch and in Settings.
  - All content (UI labels, notifications) should auto-translate.

- **Equipment Listing (Post/Rent/Sell):**
  - Farmers can add equipment with:
    - Images (upload to Firebase Storage)
    - Equipment Name, Type, Description
    - Location (GPS or manual)
    - Daily or Hourly pricing
    - Availability calendar (select available time slots)

- **Booking Module:**
  - Other farmers can view available equipment.
  - Real-time booking calendar showing hourly/daily slots.
  - Book and pay using **Razorpay gateway** (integrated via Expo).

- **Real-time Chat Support:**
  - Firebase Realtime DB chat with equipment owners.
  - Admin can monitor chats for disputes.

- **Farming Education Videos Section:**
  - Embedded YouTube videos on organic/modern farming.
  - Categorized content (e.g., equipment usage, farming tips).

- **User Profile & Equipment Management:**
  - Users can edit profile, view bookings, payment history.
  - View their posted equipment and modify or delete listings.

- **Generative Design & Aesthetics:**
  - Use generative AI-based farm-themed images in backgrounds (green fields, tractors, soil textures).
  - Nativewind/Tailwind for beautiful UI.
  - Responsive layouts with focus on rural accessibility.

---

ðŸ”¹ 2. Admin Panel (Web - ReactJS + Firebase)

âœ… **Core Features:**
- **Admin Login with Restricted Access**
  - Admin login using secured Firebase email/password.
  - Authorization middleware for protected routes.

- **Dashboard Analytics:**
  - Total registered farmers.
  - Number of equipment listed.
  - Active rentals and transactions.
  - Languages used, traffic patterns.

- **User Activity Monitoring:**
  - Real-time dashboard of user activity (logins, posts, bookings).
  - Ability to ban/suspend users or remove malicious listings.

- **Manage Listings:**
  - View/edit/delete equipment posts.
  - Flag inappropriate content.

- **Resolve Disputes:**
  - Monitor chat logs.
  - Issue refunds or handle reported issues.

- **Push Notifications:**
  - Send announcements or offers to all users.

---

ðŸ”¹ 3. Backend (Firebase Integration)

âœ… **Firebase Modules:**
- Firebase Authentication (for login/registration)
- Firebase Firestore (for storing equipment, user data, bookings)
- Firebase Realtime DB (for chat functionality)
- Firebase Storage (for equipment images)
- Firebase Cloud Messaging (for push notifications)

---

ðŸ”¹ 4. Payment Integration

âœ… **Razorpay:**
- Integrate Razorpay for secure payments.
- Allow multiple payment options (UPI, cards, wallets).
- Store transaction history per user in Firestore.
- Admin dashboard shows full transaction history.

---

ðŸ”¹ 5. Other Requirements:

âœ… **UI/UX Design Guidelines:**
- Clean, modern, mobile-first layout.
- Typography optimized for readability.
- Icons representing tractors, crops, soil, farm tools.
- Backgrounds with nature/farming themes using generative image APIs.
- Clear call-to-action buttons.

âœ… **Performance and Accessibility:**
- Ensure all components are responsive and fast.
- Support offline mode for key features using local caching.
- Color contrast compliant.
- Accessible UI with larger fonts for elderly farmers.

---

ðŸ’¡ Output Structure:

1. Full mobile app code (React Native)
2. Admin dashboard (ReactJS Web)
3. Firebase backend setup
4. Razorpay integration
5. Language support module
6. Chat and push notifications
7. Clean documentation for deployment

---

Let me know when you're ready to paste this into **Replit AI**, and Iâ€™ll also generate custom placeholder images or even a design map if you'd like.
